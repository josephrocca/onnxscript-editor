
name: Build

on:
  push:
    branches: [ '**' ]
    tags-ignore: [ '**' ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    name: Build
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ macos-latest, ubuntu-latest, windows-latest ]

    steps:
      - name: Clone Git repository
        uses: actions/checkout@v3

      - name: Install Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 16

      - name: Install Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install npm packages 
        run: make install

      - name: Lint
        run: make lint

      - name: Build Python Server
        run: make build_python

      - name: Build Electron
        shell: bash
        run: |
          case "${{ matrix.os }}" in
            macos*)
              CSC_IDENTITY_AUTO_DISCOVERY=false npx electron-builder --mac --universal --publish never -c.mac.identity=null
              ;;
            ubuntu*)
              npx electron-builder --linux appimage --x64 --publish never
              npx electron-builder --linux snap --x64 --publish never
              ;;
            windows*)
              npx electron-builder --win --x64 --arm64 --publish never
              ;;
          esac

  analyze:
    name: Analyze
    runs-on: ubuntu-latest

    permissions:
      security-events: write

    strategy:
      fail-fast: false
      matrix:
        language: [ 'javascript', 'python' ]

    steps:
      - name: Clone Git repository
        uses: actions/checkout@v3

      - name: Initialize CodeQL
        uses: github/codeql-action/init@v2
        with:
          languages: ${{ matrix.language }}

      - name: Autobuild
        uses: github/codeql-action/autobuild@v2

      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v2
